/*
 * This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License. 
 * http://creativecommons.org/licenses/by-nc/3.0/
 */
package ChatAddress;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Sara, Edgar, Andre
 */
public class Search extends javax.swing.JFrame {

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchtext = new javax.swing.JTextField();
        searching = new javax.swing.JButton();
        test = new javax.swing.JLabel();
        dropBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTable();

        setResizable(false);

        searching.setText("Search");
        searching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchingActionPerformed(evt);
            }
        });

        dropBox.setMaximumRowCount(4);
        dropBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Select --", "First name", "Last name", "E-mail" }));

        result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "firstName", "lastName", "address", "city", "region", "country", "email", "phoneNumber"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        result.setEnabled(false);
        jScrollPane1.setViewportView(result);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(test, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dropBox, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchtext, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searching, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searching)
                    .addComponent(dropBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(test, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchingActionPerformed
        /**
         * Gets the value the user chose from the drop down -menu and the
         * written search word. Then executes a query selecting all the data
         * that is connected to the search word and displays in the table.
         */
        Address address = new Address();
        String value = (String) dropBox.getSelectedItem();
        String text = searchtext.getText();

        if (value.equals(dropBox.getItemAt(1))) {
            try {
                test.setText("");
                Statement stat;
                stat = address.setupConnection().createStatement();
                ResultSet rs = stat.executeQuery("select firstName, lastName, address, p_c.city, region, country,"
                        + "p_c.email, phoneNumber from p_c, country where firstName = '"
                        + text + "' and p_c.email = country.email");
                result.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                test.setText("No results. :(");
            }
        } else if (value.equals(dropBox.getItemAt(2))) {
            try {
                test.setText("");
                Statement stat;
                stat = address.setupConnection().createStatement();
                ResultSet rs = stat.executeQuery("select firstName, lastName, address, p_c.city, region, country,"
                        + "p_c.email, phoneNumber from p_c, country where lastName = '"
                        + text + "' and p_c.email = country.email");
                result.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                test.setText("No results. :(");
            }
        } else if (value.equals(dropBox.getItemAt(3))) {
            try {
                test.setText("");
                Statement stat;
                stat = address.setupConnection().createStatement();
                ResultSet rs = stat.executeQuery("select firstName, lastName, address, p_c.city, region, country,"
                        + "p_c.email, phoneNumber from p_c, country where p_c.email = '"
                        + text + "' and p_c.email = country.email");
                result.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                test.setText("No results. :(");
            }
        } else if (value.equals(dropBox.getItemAt(0))) {
            test.setText("Select what you want to search!");
        } else {
            test.setText("No results. :(");
        }
    }//GEN-LAST:event_searchingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dropBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable result;
    private javax.swing.JButton searching;
    private javax.swing.JTextField searchtext;
    private javax.swing.JLabel test;
    // End of variables declaration//GEN-END:variables
}
